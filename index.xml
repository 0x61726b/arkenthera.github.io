<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>arkenthera.com </title>
    <link>http://arkenthera.github.io/</link>
    <language>en-us</language>
    <author></author>
    <rights>(C) 2016</rights>
    <updated>2016-05-07 20:44:02 &#43;0300 EEST</updated>

    
      
        <item>
          <title>Voxel Cone Tracing</title>
          <link>http://arkenthera.github.io/post/Voxel-Cone-Tracing/</link>
          <pubDate>Sat, 07 May 2016 20:44:02 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/Voxel-Cone-Tracing/</guid>
          <description>&lt;p&gt;VCT is a way to apply indirect lighting to a scene to approximate Global Illumination. GI helps increase the realism of a given scene.&lt;/p&gt;
</description>
        </item>
      
    
      
    
      
        <item>
          <title>Light Propagation Volumes</title>
          <link>http://arkenthera.github.io/post/Light-Propagation-Volumes/</link>
          <pubDate>Fri, 06 May 2016 22:08:01 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/Light-Propagation-Volumes/</guid>
          <description>&lt;p&gt;Light propagation volumes is a technique to approximately achieve global illumination (GI) in Real-time.It uses lattices and spherical harmonics (SH) to represent the spatial and angular distribution of light in the scene&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Post Processing Effects</title>
          <link>http://arkenthera.github.io/post/Post-Processing-Effects/</link>
          <pubDate>Sun, 01 May 2016 22:10:38 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/Post-Processing-Effects/</guid>
          <description>&lt;p&gt;Yume Engine has rich post processing effects such as Depth of Field,SSAO,Bloom,Auto Exposure and Godrays.It is really easy to implement/try new post process effects with the render call driven renderer.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Horizon Based Ambient Occlusion</title>
          <link>http://arkenthera.github.io/post/Horizon-Based-Ambient-Occlusion/</link>
          <pubDate>Mon, 25 Apr 2016 22:07:49 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/Horizon-Based-Ambient-Occlusion/</guid>
          <description>&lt;p&gt;Adapting from the sample in NVidia SDK’s DirectX 9 HBAO implementation, Yume Engine supports HBAO. Ambient Occlusion is not a simple concept to explain but in easiest words&amp;hellip;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Deferred Lights</title>
          <link>http://arkenthera.github.io/post/Deferred-Lights/</link>
          <pubDate>Sat, 23 Apr 2016 22:07:37 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/Deferred-Lights/</guid>
          <description>&lt;p&gt;Since Yume is fully deferred,there has to be a way to implement lights.In a deferred pipeline,we must create a pass for each light,be it directional, point or spot light.
For each point light,we draw a tesellated sphere,move it to lights&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>God Rays</title>
          <link>http://arkenthera.github.io/post/God-Rays/</link>
          <pubDate>Fri, 15 Apr 2016 22:10:21 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/God-Rays/</guid>
          <description>&lt;p&gt;There is a way to achieve light shafts/god rays/light beams without too much of a work.As described in GPU GEMS god rays can be achieved with a simple trick.It wont be very accurate but we’ll get results
The “shaft” effect comes from the second pass,blur passes and tonemapping is not necessary but it looks good.The math behind the effect is explained in the Gpu Gems 3 papers so if you want to check it out its free.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Scaleable Ambient Obscurance</title>
          <link>http://arkenthera.github.io/post/Scaleable-Ambient-Obscurance/</link>
          <pubDate>Fri, 15 Apr 2016 22:08:12 EEST</pubDate>
          <author></author>
          <guid>http://arkenthera.github.io/post/Scaleable-Ambient-Obscurance/</guid>
          <description>&lt;p&gt;Scaleable Ambient Obscurance is really easy to implement and very light on the performance side.In the implementation&amp;hellip;&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
